From 336e21c87ddf170cb09bff77084df5f0300b13a2 Mon Sep 17 00:00:00 2001
From: Patrick McCarty <patrick.mccarty@intel.com>
Date: Tue, 6 Aug 2019 12:30:59 -0700
Subject: [PATCH] Whitelist more syscalls for seccomp

Linking to libpthread directly has the side-effect of futex() getting
called, so it needs to be whitelisted.

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
Signed-off-by: Thiago Macieira <thiago.macieira@intel.com>
---
 src/seccomp.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/seccomp.c b/src/seccomp.c
index 1b9d9b85..250e3662 100644
--- a/src/seccomp.c
+++ b/src/seccomp.c
@@ -167,10 +167,12 @@ enable_sandbox_full(void)
  	ALLOW_RULE(fcntl64);
 	ALLOW_RULE(fstat);
  	ALLOW_RULE(fstat64);
+	ALLOW_RULE(futex);
 	ALLOW_RULE(getdents);
 #ifdef __NR_getdents64
 	ALLOW_RULE(getdents64);
 #endif
+	ALLOW_RULE(getpid);
 	ALLOW_RULE(ioctl);
 	ALLOW_RULE(lseek);
  	ALLOW_RULE(_llseek);
@@ -197,6 +199,7 @@ enable_sandbox_full(void)
 	ALLOW_RULE(stat);
 	ALLOW_RULE(stat64);
 	ALLOW_RULE(sysinfo);
+	ALLOW_RULE(umask);
 	ALLOW_RULE(unlink);
 	ALLOW_RULE(write);
 
@@ -204,7 +207,6 @@ enable_sandbox_full(void)
 #if 0
 	// needed by valgrind
 	ALLOW_RULE(gettid);
-	ALLOW_RULE(getpid);
 	ALLOW_RULE(rt_sigtimedwait);
 #endif
 
-- 
2.23.0

